kotlin version: 2.0.21
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /mnt/6402E00302DFD7DE/Code/Android/PowerAmpache2/PowerAmpache2Theme/src/main/java/luci/sixsixsix/powerampache2/ui/theme/Theme.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:27)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:14)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:246)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:142)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:148)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:43)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:464)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:73)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:675)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1660)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport$1.run(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(Unknown Source)
	at java.base/java.security.AccessController.doPrivileged(Unknown Source)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.base/java.lang.Thread.run(Unknown Source)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:PowerAmpache2Theme visibility:public modality:FINAL <> (darkTheme:kotlin.Boolean, dynamicColor:kotlin.Boolean, content:@[Composable] kotlin.Function0<kotlin.Unit>) returnType:kotlin.Unit
  annotations:
    Composable
  VALUE_PARAMETER name:darkTheme index:0 type:kotlin.Boolean
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:dynamicColor index:1 type:kotlin.Boolean
    EXPRESSION_BODY
      ERROR_EXPR 'Default Stub' type=kotlin.Boolean
  VALUE_PARAMETER name:content index:2 type:@[Composable] kotlin.Function0<kotlin.Unit>
  BLOCK_BODY
    VAR name:colorScheme type:androidx.compose.material3.ColorScheme [val]
      WHEN type=androidx.compose.material3.ColorScheme origin=WHEN
        BRANCH
          if: CALL 'public final fun ANDAND (arg0: kotlin.Boolean, arg1: kotlin.Boolean): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=null
            arg0: GET_VAR 'dynamicColor: kotlin.Boolean declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt.PowerAmpache2Theme' type=kotlin.Boolean origin=null
            arg1: CALL 'public final fun greaterOrEqual (arg0: kotlin.Int, arg1: kotlin.Int): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=GTEQ
              arg0: GET_FIELD 'FIELD IR_EXTERNAL_JAVA_DECLARATION_STUB name:SDK_INT type:kotlin.Int visibility:public [final,static] declared in android.os.Build.VERSION' type=kotlin.Int superQualifierSymbol=android.os.Build.VERSION origin=null
              arg1: CONST Int type=kotlin.Int value=31
          then: BLOCK type=androidx.compose.material3.ColorScheme origin=null
            VAR name:context type:android.content.Context [val]
              CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
                $this: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
                  CALL 'public final fun <get-LocalContext> (): androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> declared in androidx.compose.ui.platform.AndroidCompositionLocals_androidKt' type=androidx.compose.runtime.ProvidableCompositionLocal<android.content.Context> origin=GET_PROPERTY
            WHEN type=androidx.compose.material3.ColorScheme origin=IF
              BRANCH
                if: GET_VAR 'darkTheme: kotlin.Boolean declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt.PowerAmpache2Theme' type=kotlin.Boolean origin=null
                then: BLOCK type=androidx.compose.material3.ColorScheme origin=null
                  CALL 'public final fun apply <T> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.StandardKt.apply, kotlin.Unit>): T of kotlin.StandardKt.apply [inline] declared in kotlin.StandardKt' type=androidx.compose.material3.ColorScheme origin=null
                    <T>: androidx.compose.material3.ColorScheme
                    $receiver: CALL 'public final fun dynamicDarkColorScheme (context: android.content.Context): androidx.compose.material3.ColorScheme declared in androidx.compose.material3.DynamicTonalPaletteKt' type=androidx.compose.material3.ColorScheme origin=null
                      context: GET_VAR 'val context: android.content.Context [val] declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt.PowerAmpache2Theme' type=android.content.Context origin=null
                    block: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.material3.ColorScheme, kotlin.Unit> origin=LAMBDA
                      COMPOSITE type=kotlin.Unit origin=null
                      FUNCTION_REFERENCE 'private final fun PowerAmpache2Theme$lambda$2 (): kotlin.Unit declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.material3.ColorScheme, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
              BRANCH
                if: CONST Boolean type=kotlin.Boolean value=true
                then: BLOCK type=androidx.compose.material3.ColorScheme origin=null
                  CALL 'public final fun apply <T> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.StandardKt.apply, kotlin.Unit>): T of kotlin.StandardKt.apply [inline] declared in kotlin.StandardKt' type=androidx.compose.material3.ColorScheme origin=null
                    <T>: androidx.compose.material3.ColorScheme
                    $receiver: CALL 'public final fun dynamicLightColorScheme (context: android.content.Context): androidx.compose.material3.ColorScheme declared in androidx.compose.material3.DynamicTonalPaletteKt' type=androidx.compose.material3.ColorScheme origin=null
                      context: GET_VAR 'val context: android.content.Context [val] declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt.PowerAmpache2Theme' type=android.content.Context origin=null
                    block: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.material3.ColorScheme, kotlin.Unit> origin=LAMBDA
                      COMPOSITE type=kotlin.Unit origin=null
                      FUNCTION_REFERENCE 'private final fun PowerAmpache2Theme$lambda$3 (): kotlin.Unit declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.material3.ColorScheme, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
        BRANCH
          if: GET_VAR 'darkTheme: kotlin.Boolean declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt.PowerAmpache2Theme' type=kotlin.Boolean origin=null
          then: CALL 'private final fun <get-DarkColorScheme> (): androidx.compose.material3.ColorScheme declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt' type=androidx.compose.material3.ColorScheme origin=GET_PROPERTY
        BRANCH
          if: CONST Boolean type=kotlin.Boolean value=true
          then: CALL 'private final fun <get-LightColorScheme> (): androidx.compose.material3.ColorScheme declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt' type=androidx.compose.material3.ColorScheme origin=GET_PROPERTY
    VAR name:view type:android.view.View [val]
      CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.view.View origin=GET_PROPERTY
        $this: TYPE_OP type=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal> origin=IMPLICIT_CAST typeOperand=androidx.compose.runtime.CompositionLocal<T of androidx.compose.runtime.CompositionLocal>
          CALL 'public final fun <get-LocalView> (): androidx.compose.runtime.ProvidableCompositionLocal<android.view.View> declared in androidx.compose.ui.platform.AndroidCompositionLocals_androidKt' type=androidx.compose.runtime.ProvidableCompositionLocal<android.view.View> origin=GET_PROPERTY
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=null
          $this: CALL 'public open fun isInEditMode (): kotlin.Boolean declared in android.view.View' type=kotlin.Boolean origin=GET_PROPERTY
            $this: GET_VAR 'val view: android.view.View [val] declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt.PowerAmpache2Theme' type=android.view.View origin=null
        then: BLOCK type=kotlin.Unit origin=null
          CALL 'public final fun SideEffect (effect: kotlin.Function0<kotlin.Unit>): kotlin.Unit declared in androidx.compose.runtime.EffectsKt' type=kotlin.Unit origin=null
            effect: BLOCK type=kotlin.Function0<kotlin.Unit> origin=LAMBDA
              COMPOSITE type=kotlin.Unit origin=null
              CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=kotlin.Function0<kotlin.Unit> origin=null
                <T>: kotlin.Function0<kotlin.Unit>
                dynamicCall: CALL 'public final fun invoke (p0: android.view.View, p1: androidx.compose.material3.ColorScheme, p2: kotlin.Boolean): kotlin.Function0<kotlin.Unit> declared in kotlin.jvm.internal.invokeDynamic' type=kotlin.Function0<kotlin.Unit> origin=null
                  p0: GET_VAR 'val view: android.view.View [val] declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt.PowerAmpache2Theme' type=android.view.View origin=null
                  p1: GET_VAR 'val colorScheme: androidx.compose.material3.ColorScheme [val] declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt.PowerAmpache2Theme' type=androidx.compose.material3.ColorScheme origin=null
                  p2: GET_VAR 'darkTheme: kotlin.Boolean declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt.PowerAmpache2Theme' type=kotlin.Boolean origin=null
                bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                  tag: CONST Int type=kotlin.Int value=6
                  owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
                  name: CONST String type=kotlin.String value="metafactory"
                  descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
                  isInterface: CONST Boolean type=kotlin.Boolean value=false
                bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
                  CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                    method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): R of kotlin.Function0 [operator] declared in kotlin.Function0' type=kotlin.Any
                  RAW_FUNCTION_REFERENCE 'private final fun PowerAmpache2Theme$lambda$4 ($view: android.view.View, $colorScheme: androidx.compose.material3.ColorScheme, $darkTheme: kotlin.Boolean): kotlin.Unit? declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt' type=kotlin.Any
                  CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                    method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (): kotlin.Unit? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
    CALL 'public final fun MaterialTheme$default (colorScheme: androidx.compose.material3.ColorScheme?, shapes: androidx.compose.material3.Shapes?, typography: androidx.compose.material3.Typography?, content: @[Composable] kotlin.Function0<kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): kotlin.Unit declared in androidx.compose.material3.MaterialThemeKt' type=kotlin.Unit origin=DEFAULT_DISPATCH_CALL
      colorScheme: GET_VAR 'val colorScheme: androidx.compose.material3.ColorScheme [val] declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt.PowerAmpache2Theme' type=androidx.compose.material3.ColorScheme origin=null
      shapes: COMPOSITE type=androidx.compose.material3.Shapes? origin=DEFAULT_VALUE
        CONST Null type=androidx.compose.material3.Shapes? value=null
      typography: CALL 'public final fun <get-Typography> (): androidx.compose.material3.Typography declared in luci.sixsixsix.powerampache2.ui.theme.TypeKt' type=androidx.compose.material3.Typography origin=GET_PROPERTY
      content: GET_VAR 'content: @[Composable] kotlin.Function0<kotlin.Unit> declared in luci.sixsixsix.powerampache2.ui.theme.ThemeKt.PowerAmpache2Theme' type=@[Composable] kotlin.Function0<kotlin.Unit> origin=null
      $mask0: CONST Int type=kotlin.Int value=2
      $handler: CONST Null type=kotlin.Any? value=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:47)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:40)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:406)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:423)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:168)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:39)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseFactoriesKt.createFilePhase$lambda$4(PhaseFactories.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:69)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 43 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun <get-current> (): T of androidx.compose.runtime.CompositionLocal [inline] declared in androidx.compose.runtime.CompositionLocal' type=android.content.Context origin=GET_PROPERTY
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:163)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:653)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:790)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:593)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitBlock(IrElementVisitor.kt:122)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:413)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlock(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlock.accept(IrBlock.kt:18)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:1101)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitWhen(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrWhen.accept(IrWhen.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:790)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:579)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:584)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:138)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:240)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:123)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:44)
	... 53 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/runtime/CompositionLocal;.getCurrent()Ljava/lang/Object;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 81 more


